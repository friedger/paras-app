{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport * as blockstack from 'blockstack';\nimport { configure, Model } from 'radiks';\nimport axios from 'axios';\n\nvar Identifier =\n/*#__PURE__*/\nfunction (_Model) {\n  _inherits(Identifier, _Model);\n\n  function Identifier() {\n    _classCallCheck(this, Identifier);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Identifier).apply(this, arguments));\n  }\n\n  return Identifier;\n}(Model);\n\n_defineProperty(Identifier, \"className\", 'Identifier');\n\n_defineProperty(Identifier, \"schema\", {\n  identifier: {\n    type: String,\n    decrypted: true\n  },\n  blockstackId: {\n    type: String,\n    decrypted: true\n  },\n  profile: {\n    decrypted: true\n  }\n});\n\nvar BlockstackAPI = function BlockstackAPI() {\n  _classCallCheck(this, BlockstackAPI);\n\n  this[\"default\"] = blockstack;\n  this.appConfig = new blockstack.AppConfig(['email', 'store_write', 'publish_data'], process.env.APP_DOMAIN, '/login');\n  this.session = new blockstack.UserSession({\n    appConfig: this.appConfig\n  });\n  this.radiks = configure({\n    apiServer: process.env.APP_DOMAIN,\n    userSession: this.session\n  });\n};\n\nvar ThemeAPI =\n/*#__PURE__*/\nfunction () {\n  function ThemeAPI() {\n    _classCallCheck(this, ThemeAPI);\n  }\n\n  _createClass(ThemeAPI, [{\n    key: \"fetch\",\n    value: function () {\n      var _fetch = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get('/api/themes');\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function fetch() {\n        return _fetch.apply(this, arguments);\n      }\n\n      return fetch;\n    }()\n  }]);\n\n  return ThemeAPI;\n}();\n\nexport var blockstackAPI = new BlockstackAPI();\nexport var themeAPI = new ThemeAPI();\nexport var IdentifierAPI = Identifier;","map":null,"metadata":{},"sourceType":"module"}