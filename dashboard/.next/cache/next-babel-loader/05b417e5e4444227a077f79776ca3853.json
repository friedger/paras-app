{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_THEME_DATA } from '../actions/theme';\nconst initialState = {};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_THEME_DATA:\n      return _objectSpread({}, state, {}, action.theme);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/riqi/Projects/persona-app/dashboard/reducers/theme.js"],"names":["SET_THEME_DATA","initialState","reducer","state","action","type","theme"],"mappings":";;;;;;;;;;;;AAAA,SAASA,cAAT,QAA+B,kBAA/B;AAEA,MAAMC,YAAY,GAAG,EAArB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,cAAL;AACE,+BACCG,KADD,MAECC,MAAM,CAACE,KAFR;;AAIF;AACE,aAAOH,KAAP;AAPJ;AASD,CAVD;;AAYA,eAAeD,OAAf","sourcesContent":["import { SET_THEME_DATA } from '../actions/theme'\n\nconst initialState = {}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_THEME_DATA:\n      return {\n\t\t\t\t...state,\n\t\t\t\t...action.theme\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}