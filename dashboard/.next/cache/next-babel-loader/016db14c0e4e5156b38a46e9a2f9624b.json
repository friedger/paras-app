{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport * as blockstack from 'blockstack';\nimport { configure, Model } from 'radiks';\nimport axios from 'axios';\n\nclass Identifier extends Model {}\n\n_defineProperty(Identifier, \"className\", 'Identifier');\n\n_defineProperty(Identifier, \"schema\", {\n  identifier: {\n    type: String,\n    decrypted: true\n  },\n  blockstackId: {\n    type: String,\n    decrypted: true\n  },\n  profile: {\n    decrypted: true\n  }\n});\n\nclass BlockstackAPI {\n  constructor() {\n    this.default = blockstack;\n    this.appConfig = new blockstack.AppConfig(['email', 'store_write', 'publish_data'], process.env.APP_DOMAIN, '/login');\n    this.session = new blockstack.UserSession({\n      appConfig: this.appConfig\n    });\n    this.radiks = configure({\n      apiServer: process.env.APP_DOMAIN,\n      userSession: this.session\n    });\n  }\n\n}\n\nclass ThemeAPI {\n  async fetch() {\n    return await axios.get('/api/themes');\n  }\n\n}\n\nexport const blockstackAPI = new BlockstackAPI();\nexport const themeAPI = new ThemeAPI();\nexport const IdentifierAPI = Identifier;","map":{"version":3,"sources":["/Users/riqi/Projects/persona-app/dashboard/api/index.js"],"names":["blockstack","configure","Model","axios","Identifier","identifier","type","String","decrypted","blockstackId","profile","BlockstackAPI","constructor","default","appConfig","AppConfig","process","env","APP_DOMAIN","session","UserSession","radiks","apiServer","userSession","ThemeAPI","fetch","get","blockstackAPI","themeAPI","IdentifierAPI"],"mappings":";AAAA,OAAO,KAAKA,UAAZ,MAA4B,YAA5B;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,QAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBF,KAAzB,CAA+B;;gBAAzBE,U,eACc,Y;;gBADdA,U,YAEW;AACfC,EAAAA,UAAU,EAAE;AACXC,IAAAA,IAAI,EAAEC,MADK;AAEXC,IAAAA,SAAS,EAAE;AAFA,GADG;AAKfC,EAAAA,YAAY,EAAE;AACbH,IAAAA,IAAI,EAAEC,MADO;AAEbC,IAAAA,SAAS,EAAE;AAFE,GALC;AASfE,EAAAA,OAAO,EAAE;AACRF,IAAAA,SAAS,EAAE;AADH;AATM,C;;AAejB,MAAMG,aAAN,CAAoB;AACnBC,EAAAA,WAAW,GAAG;AACb,SAAKC,OAAL,GAAeb,UAAf;AACA,SAAKc,SAAL,GAAiB,IAAId,UAAU,CAACe,SAAf,CAAyB,CAAC,OAAD,EAAU,aAAV,EAAyB,cAAzB,CAAzB,EAAmEC,OAAO,CAACC,GAAR,CAAYC,UAA/E,EAA2F,QAA3F,CAAjB;AACA,SAAKC,OAAL,GAAe,IAAInB,UAAU,CAACoB,WAAf,CAA2B;AACzCN,MAAAA,SAAS,EAAE,KAAKA;AADyB,KAA3B,CAAf;AAGA,SAAKO,MAAL,GAAcpB,SAAS,CAAC;AACvBqB,MAAAA,SAAS,EAAEN,OAAO,CAACC,GAAR,CAAYC,UADA;AAEvBK,MAAAA,WAAW,EAAE,KAAKJ;AAFK,KAAD,CAAvB;AAIA;;AAXkB;;AAcpB,MAAMK,QAAN,CAAe;AACd,QAAMC,KAAN,GAAc;AACb,WAAO,MAAMtB,KAAK,CAACuB,GAAN,CAAU,aAAV,CAAb;AACA;;AAHa;;AAMf,OAAO,MAAMC,aAAa,GAAG,IAAIhB,aAAJ,EAAtB;AACP,OAAO,MAAMiB,QAAQ,GAAG,IAAIJ,QAAJ,EAAjB;AACP,OAAO,MAAMK,aAAa,GAAGzB,UAAtB","sourcesContent":["import * as blockstack from 'blockstack'\nimport { configure, Model } from 'radiks'\nimport axios from 'axios'\n\nclass Identifier extends Model {\n\tstatic className = 'Identifier'\n\tstatic schema = { \n\t\tidentifier: {\n\t\t\ttype: String,\n\t\t\tdecrypted: true\n\t\t},\n\t\tblockstackId: {\n\t\t\ttype: String,\n\t\t\tdecrypted: true\n\t\t},\n\t\tprofile: {\n\t\t\tdecrypted: true\n\t\t}\n\t}\n}\n\nclass BlockstackAPI {\n\tconstructor() {\n\t\tthis.default = blockstack\n\t\tthis.appConfig = new blockstack.AppConfig(['email', 'store_write', 'publish_data'], process.env.APP_DOMAIN, '/login')\n\t\tthis.session = new blockstack.UserSession({\n\t\t\tappConfig: this.appConfig\n\t\t})\n\t\tthis.radiks = configure({\n\t\t\tapiServer: process.env.APP_DOMAIN,\n\t\t\tuserSession: this.session\n\t\t})\n\t}\n}\n\nclass ThemeAPI {\n\tasync fetch() {\n\t\treturn await axios.get('/api/themes')\n\t}\t\n}\n\nexport const blockstackAPI = new BlockstackAPI()\nexport const themeAPI = new ThemeAPI()\nexport const IdentifierAPI = Identifier"]},"metadata":{},"sourceType":"module"}