{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Frame from 'react-frame-component';\nimport { withRedux } from '../lib/redux';\nimport Layout from '../components/layout';\nimport Meta from '../components/meta';\nimport Nav from '../components/nav';\nimport Sidebar from '../components/sidebar';\nimport LoggedIn from '../components/loggedIn';\nimport Onboarding from '../components/onboarding';\nimport Loading from '../components/loading';\nimport { saveAuthData, saveUserId } from '../actions/auth';\nimport { saveProfileData } from '../actions/profile';\nimport { blockstackAPI, IdentifierAPI, themeAPI } from '../api';\nimport anchorme from 'anchorme';\nimport handlebars from 'handlebars';\n\nvar readFileAsBuffer = function readFileAsBuffer(file) {\n  var temporaryFileReader = new FileReader();\n  return new _Promise(function (resolve, reject) {\n    temporaryFileReader.onload = function () {\n      resolve(temporaryFileReader.result);\n    };\n\n    temporaryFileReader.readAsArrayBuffer(file);\n  });\n};\n\nvar Dashboard = function Dashboard() {\n  var dispatch = useDispatch();\n  var router = useRouter();\n\n  var _useState = useState(''),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(''),\n      description = _useState2[0],\n      setDescription = _useState2[1];\n\n  var _useState3 = useState(''),\n      avatarUrl = _useState3[0],\n      setAvatarUrl = _useState3[1];\n\n  var _useState4 = useState(''),\n      avatarFile = _useState4[0],\n      setAvatarFile = _useState4[1];\n\n  var _useState5 = useState([]),\n      accountList = _useState5[0],\n      setAccountList = _useState5[1];\n\n  var _useState6 = useState([]),\n      themeList = _useState6[0],\n      setThemeList = _useState6[1];\n\n  var _useState7 = useState(''),\n      theme = _useState7[0],\n      setTheme = _useState7[1];\n\n  var _useState8 = useState(''),\n      identifier = _useState8[0],\n      setIdentifier = _useState8[1];\n\n  var _useState9 = useState(''),\n      template = _useState9[0],\n      setTemplate = _useState9[1];\n\n  var _useState10 = useState(''),\n      submitState = _useState10[0],\n      setSubmitState = _useState10[1];\n\n  var _useState11 = useState(true),\n      loadingState = _useState11[0],\n      setLoadingState = _useState11[1];\n\n  var authData = useSelector(function (state) {\n    return state.auth.authData;\n  });\n  var profile = useSelector(function (state) {\n    return state.profile;\n  });\n\n  var _useState12 = useState(false),\n      showProfileSidebar = _useState12[0],\n      setShowProfileSidebar = _useState12[1];\n\n  var _useState13 = useState(true),\n      showOnboarding = _useState13[0],\n      setShowOnboarding = _useState13[1];\n\n  var logout =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return blockstackAPI.session.signUserOut();\n\n            case 2:\n              dispatch(saveAuthData(null));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function logout() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var submit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(e, onboarding) {\n      var newProfile, buff, newAvatarUrl, newData, newId, _newId;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              setSubmitState('pending');\n              _context2.prev = 2;\n              newProfile = {\n                name: name,\n                description: description,\n                avatarUrl: avatarUrl,\n                accountList: accountList,\n                theme: theme\n              };\n\n              if (!avatarFile) {\n                _context2.next = 12;\n                break;\n              }\n\n              _context2.next = 7;\n              return readFileAsBuffer(avatarFile);\n\n            case 7:\n              buff = _context2.sent;\n              _context2.next = 10;\n              return blockstackAPI.session.putFile('avatar.png', buff, {\n                encrypt: false\n              });\n\n            case 10:\n              newAvatarUrl = _context2.sent;\n              newProfile.avatarUrl = newAvatarUrl;\n\n            case 12:\n              if (!onboarding) {\n                _context2.next = 19;\n                break;\n              }\n\n              newData = {\n                identifier: identifier,\n                blockstackId: authData.username,\n                profile: newProfile\n              };\n              newId = new IdentifierAPI(newData);\n              _context2.next = 17;\n              return newId.save();\n\n            case 17:\n              _context2.next = 25;\n              break;\n\n            case 19:\n              _context2.next = 21;\n              return IdentifierAPI.findOne({\n                identifier: identifier\n              });\n\n            case 21:\n              _newId = _context2.sent;\n\n              _newId.update({\n                profile: newProfile\n              });\n\n              _context2.next = 25;\n              return _newId.save();\n\n            case 25:\n              dispatch(saveProfileData(newProfile));\n              setSubmitState('fulfilled');\n              _context2.next = 32;\n              break;\n\n            case 29:\n              _context2.prev = 29;\n              _context2.t0 = _context2[\"catch\"](2);\n              setSubmitState('rejected');\n\n            case 32:\n              setTimeout(function () {\n                setSubmitState('');\n              }, 1000);\n\n            case 33:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 29]]);\n    }));\n\n    return function submit(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var checkAuthData =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var getAuthData, id;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!blockstackAPI.session.isUserSignedIn()) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                if (authData) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                _context3.next = 4;\n                return blockstackAPI.session.loadUserData();\n\n              case 4:\n                getAuthData = _context3.sent;\n                dispatch(saveAuthData(getAuthData));\n\n              case 6:\n                _context3.next = 8;\n                return IdentifierAPI.findOne({\n                  identifier: identifier\n                });\n\n              case 8:\n                id = _context3.sent;\n\n                if (id) {\n                  setShowOnboarding(false);\n                  dispatch(saveProfileData(id.attrs.profile));\n                  dispatch(saveUserId(id.attrs.identifier));\n                }\n\n                setTimeout(function () {\n                  setLoadingState(false);\n                }, 500);\n                _context3.next = 14;\n                break;\n\n              case 13:\n                router.replace('/login');\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function checkAuthData() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    checkAuthData();\n\n    var fetchThemeList =\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return themeAPI.fetch();\n\n              case 2:\n                response = _context4.sent;\n                setThemeList(response.data.data);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function fetchThemeList() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    fetchThemeList();\n  }, []);\n  useEffect(function () {\n    if (profile.name) {\n      setName(profile.name);\n    }\n\n    if (profile.description) {\n      setDescription(profile.description);\n    }\n\n    if (_Array$isArray(profile.accountList)) {\n      var cloneAccountList = JSON.parse(_JSON$stringify(profile.accountList));\n      setAccountList(cloneAccountList);\n    }\n\n    if (profile.avatarUrl) {\n      setAvatarUrl(profile.avatarUrl);\n    }\n\n    if (profile.theme) {\n      var cloneTheme = JSON.parse(_JSON$stringify(profile.theme));\n      setTheme(cloneTheme);\n    }\n  }, [profile]);\n  useEffect(function () {\n    var currentData = JSON.parse(_JSON$stringify({\n      name: name,\n      description: description,\n      avatarUrl: avatarUrl,\n      accountList: accountList\n    }));\n\n    if (currentData.description) {\n      currentData.description = anchorme(currentData.description, {\n        attributes: [{\n          name: \"target\",\n          value: \"_blank\"\n        }]\n      });\n    }\n\n    if (theme) {\n      var path = 'index';\n      var page = theme.templatePage.find(function (page) {\n        return page.path === path;\n      });\n      var compiled = handlebars.compile(page.template || '')(currentData);\n      setTemplate(compiled);\n    }\n  }, [theme, name, description, avatarUrl, accountList]);\n\n  var toggleProfileSidebar = function toggleProfileSidebar() {\n    setShowProfileSidebar(!showProfileSidebar);\n  };\n\n  return __jsx(Layout, null, __jsx(Head, null, __jsx(\"title\", null, \"Dashboard | Paras\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  })), __jsx(Meta, null), __jsx(LoggedIn, null), loadingState && __jsx(Loading, null), __jsx(Nav, {\n    toggleProfileSidebar: toggleProfileSidebar\n  }), showOnboarding && __jsx(Onboarding, {\n    identifier: identifier,\n    setIdentifer: setIdentifier,\n    name: name,\n    setName: setName,\n    description: description,\n    setDescription: setDescription,\n    accountList: accountList,\n    setAccountList: setAccountList,\n    avatarUrl: avatarUrl,\n    setAvatarUrl: setAvatarUrl,\n    avatarFile: avatarFile,\n    setAvatarFile: setAvatarFile,\n    theme: theme,\n    setTheme: setTheme,\n    themeList: themeList,\n    submit: submit,\n    submitState: submitState,\n    showOnboarding: showOnboarding,\n    setShowOnboarding: setShowOnboarding\n  }), __jsx(Sidebar, {\n    name: name,\n    setName: setName,\n    description: description,\n    setDescription: setDescription,\n    accountList: accountList,\n    setAccountList: setAccountList,\n    avatarUrl: avatarUrl,\n    setAvatarUrl: setAvatarUrl,\n    avatarFile: avatarFile,\n    setAvatarFile: setAvatarFile,\n    theme: theme,\n    setTheme: setTheme,\n    themeList: themeList,\n    submit: submit,\n    submitState: submitState,\n    showProfileSidebar: showProfileSidebar,\n    toggleProfileSidebar: toggleProfileSidebar,\n    logout: logout\n  }), __jsx(Frame, {\n    className: \"w-screen\",\n    style: {\n      height: \"calc(100vh - 2.5rem)\"\n    }\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: template\n    }\n  })));\n};\n\nexport default withRedux(Dashboard);","map":null,"metadata":{},"sourceType":"module"}