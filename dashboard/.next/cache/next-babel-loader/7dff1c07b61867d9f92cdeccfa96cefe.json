{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport * as blockstack from 'blockstack';\nimport { configure, Model } from 'radiks';\nimport axios from 'axios';\n\nvar Identifier =\n/*#__PURE__*/\nfunction (_Model) {\n  _inherits(Identifier, _Model);\n\n  function Identifier() {\n    _classCallCheck(this, Identifier);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Identifier).apply(this, arguments));\n  }\n\n  return Identifier;\n}(Model);\n\n_defineProperty(Identifier, \"className\", 'Identifier');\n\n_defineProperty(Identifier, \"schema\", {\n  identifier: {\n    type: String,\n    decrypted: true\n  },\n  blockstackId: {\n    type: String,\n    decrypted: true\n  },\n  profile: {\n    decrypted: true\n  }\n});\n\nvar BlockstackAPI = function BlockstackAPI() {\n  _classCallCheck(this, BlockstackAPI);\n\n  this[\"default\"] = blockstack;\n  this.appConfig = new blockstack.AppConfig(['email', 'store_write', 'publish_data'], process.env.APP_DOMAIN, '/login');\n  this.session = new blockstack.UserSession({\n    appConfig: this.appConfig\n  });\n  this.radiks = configure({\n    apiServer: process.env.APP_DOMAIN,\n    userSession: this.session\n  });\n};\n\nvar ThemeAPI =\n/*#__PURE__*/\nfunction () {\n  function ThemeAPI() {\n    _classCallCheck(this, ThemeAPI);\n  }\n\n  _createClass(ThemeAPI, [{\n    key: \"fetch\",\n    value: function () {\n      var _fetch = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get('/api/themes');\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function fetch() {\n        return _fetch.apply(this, arguments);\n      }\n\n      return fetch;\n    }()\n  }]);\n\n  return ThemeAPI;\n}();\n\nexport var blockstackAPI = new BlockstackAPI();\nexport var themeAPI = new ThemeAPI();\nexport var IdentifierAPI = Identifier;","map":{"version":3,"sources":["/Users/riqi/Projects/persona-app/dashboard/api/index.js"],"names":["blockstack","configure","Model","axios","Identifier","identifier","type","String","decrypted","blockstackId","profile","BlockstackAPI","appConfig","AppConfig","process","env","APP_DOMAIN","session","UserSession","radiks","apiServer","userSession","ThemeAPI","get","blockstackAPI","themeAPI","IdentifierAPI"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,UAAZ,MAA4B,YAA5B;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,QAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,U;;;;;;;;;;;;EAAmBF,K;;gBAAnBE,U,eACc,Y;;gBADdA,U,YAEW;AACfC,EAAAA,UAAU,EAAE;AACXC,IAAAA,IAAI,EAAEC,MADK;AAEXC,IAAAA,SAAS,EAAE;AAFA,GADG;AAKfC,EAAAA,YAAY,EAAE;AACbH,IAAAA,IAAI,EAAEC,MADO;AAEbC,IAAAA,SAAS,EAAE;AAFE,GALC;AASfE,EAAAA,OAAO,EAAE;AACRF,IAAAA,SAAS,EAAE;AADH;AATM,C;;IAeXG,a,GACL,yBAAc;AAAA;;AACb,oBAAeX,UAAf;AACA,OAAKY,SAAL,GAAiB,IAAIZ,UAAU,CAACa,SAAf,CAAyB,CAAC,OAAD,EAAU,aAAV,EAAyB,cAAzB,CAAzB,EAAmEC,OAAO,CAACC,GAAR,CAAYC,UAA/E,EAA2F,QAA3F,CAAjB;AACA,OAAKC,OAAL,GAAe,IAAIjB,UAAU,CAACkB,WAAf,CAA2B;AACzCN,IAAAA,SAAS,EAAE,KAAKA;AADyB,GAA3B,CAAf;AAGA,OAAKO,MAAL,GAAclB,SAAS,CAAC;AACvBmB,IAAAA,SAAS,EAAEN,OAAO,CAACC,GAAR,CAAYC,UADA;AAEvBK,IAAAA,WAAW,EAAE,KAAKJ;AAFK,GAAD,CAAvB;AAIA,C;;IAGIK,Q;;;;;;;;;;;;;;;;;;uBAESnB,KAAK,CAACoB,GAAN,CAAU,aAAV,C;;;;;;;;;;;;;;;;;;;;;;;;AAIf,OAAO,IAAMC,aAAa,GAAG,IAAIb,aAAJ,EAAtB;AACP,OAAO,IAAMc,QAAQ,GAAG,IAAIH,QAAJ,EAAjB;AACP,OAAO,IAAMI,aAAa,GAAGtB,UAAtB","sourcesContent":["import * as blockstack from 'blockstack'\nimport { configure, Model } from 'radiks'\nimport axios from 'axios'\n\nclass Identifier extends Model {\n\tstatic className = 'Identifier'\n\tstatic schema = { \n\t\tidentifier: {\n\t\t\ttype: String,\n\t\t\tdecrypted: true\n\t\t},\n\t\tblockstackId: {\n\t\t\ttype: String,\n\t\t\tdecrypted: true\n\t\t},\n\t\tprofile: {\n\t\t\tdecrypted: true\n\t\t}\n\t}\n}\n\nclass BlockstackAPI {\n\tconstructor() {\n\t\tthis.default = blockstack\n\t\tthis.appConfig = new blockstack.AppConfig(['email', 'store_write', 'publish_data'], process.env.APP_DOMAIN, '/login')\n\t\tthis.session = new blockstack.UserSession({\n\t\t\tappConfig: this.appConfig\n\t\t})\n\t\tthis.radiks = configure({\n\t\t\tapiServer: process.env.APP_DOMAIN,\n\t\t\tuserSession: this.session\n\t\t})\n\t}\n}\n\nclass ThemeAPI {\n\tasync fetch() {\n\t\treturn await axios.get('/api/themes')\n\t}\t\n}\n\nexport const blockstackAPI = new BlockstackAPI()\nexport const themeAPI = new ThemeAPI()\nexport const IdentifierAPI = Identifier"]},"metadata":{},"sourceType":"module"}