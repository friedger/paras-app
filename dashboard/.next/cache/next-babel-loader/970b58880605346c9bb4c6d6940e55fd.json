{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { withRedux } from '../lib/redux';\nimport { saveAuthData } from '../actions/auth';\nimport { blockstackAPI } from '../api';\nimport { User } from 'radiks';\nimport Meta from '../components/meta';\nimport Layout from '../components/layout';\nimport Login from '../components/login';\nimport LandingNav from '../components/landingNav';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    0: loginState,\n    1: setLoginState\n  } = useState('');\n  useEffect(() => {\n    const checkAuthData = async () => {\n      if (blockstackAPI.session.isUserSignedIn()) {\n        setLoginState('pending');\n        const authData = blockstackAPI.session.loadUserData();\n        await User.createWithCurrentUser();\n        dispatch(saveAuthData(authData));\n        router.push('/dash');\n      } else if (blockstackAPI.session.isSignInPending()) {\n        setLoginState('pending');\n        const authData = await blockstackAPI.session.handlePendingSignIn();\n        await User.createWithCurrentUser();\n        dispatch(saveAuthData(authData));\n        router.push('/dash');\n      }\n    };\n\n    checkAuthData();\n  }, []);\n  return __jsx(Layout, null, __jsx(Head, null, __jsx(\"title\", null, \"Login | Paras\")), __jsx(Meta, null), __jsx(LandingNav, null), __jsx(Login, {\n    loginState: loginState\n  }));\n};\n\nexport default withRedux(LoginPage);","map":null,"metadata":{},"sourceType":"module"}