{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { withRedux } from '../lib/redux';\nimport { saveAuthData } from '../actions/auth';\nimport { blockstackAPI } from '../api';\nimport { User } from 'radiks';\nimport Meta from '../components/meta';\nimport Layout from '../components/layout';\nimport Login from '../components/login';\nimport LandingNav from '../components/landingNav';\n\nvar LoginPage = function LoginPage() {\n  var dispatch = useDispatch();\n  var router = useRouter();\n\n  var _useState = useState(''),\n      loginState = _useState[0],\n      setLoginState = _useState[1];\n\n  useEffect(function () {\n    var checkAuthData =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var authData, _authData;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!blockstackAPI.session.isUserSignedIn()) {\n                  _context.next = 9;\n                  break;\n                }\n\n                setLoginState('pending');\n                authData = blockstackAPI.session.loadUserData();\n                _context.next = 5;\n                return User.createWithCurrentUser();\n\n              case 5:\n                dispatch(saveAuthData(authData));\n                router.push('/dash');\n                _context.next = 18;\n                break;\n\n              case 9:\n                if (!blockstackAPI.session.isSignInPending()) {\n                  _context.next = 18;\n                  break;\n                }\n\n                setLoginState('pending');\n                _context.next = 13;\n                return blockstackAPI.session.handlePendingSignIn();\n\n              case 13:\n                _authData = _context.sent;\n                _context.next = 16;\n                return User.createWithCurrentUser();\n\n              case 16:\n                dispatch(saveAuthData(_authData));\n                router.push('/dash');\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function checkAuthData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    checkAuthData();\n  }, []);\n  return __jsx(Layout, null, __jsx(Head, null, __jsx(\"title\", null, \"Login | Paras\")), __jsx(Meta, null), __jsx(LandingNav, null), __jsx(Login, {\n    loginState: loginState\n  }));\n};\n\nexport default withRedux(LoginPage);","map":{"version":3,"sources":["/Users/riqi/Projects/persona-app/dashboard/pages/login.js"],"names":["React","useEffect","useState","useDispatch","Head","useRouter","withRedux","saveAuthData","blockstackAPI","User","Meta","Layout","Login","LandingNav","LoginPage","dispatch","router","loginState","setLoginState","checkAuthData","session","isUserSignedIn","authData","loadUserData","createWithCurrentUser","push","isSignInPending","handlePendingSignIn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,aAAT,QAA8B,QAA9B;AACA,SAASC,IAAT,QAAqB,QAArB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,MAAMa,MAAM,GAAGX,SAAS,EAAxB;;AAFsB,kBAGcH,QAAQ,CAAC,EAAD,CAHtB;AAAA,MAGfe,UAHe;AAAA,MAGHC,aAHG;;AAKvBjB,EAAAA,SAAS,CAAC,YAAM;AACf,QAAMkB,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,qBACfX,aAAa,CAACY,OAAd,CAAsBC,cAAtB,EADe;AAAA;AAAA;AAAA;;AAEhBH,gBAAAA,aAAa,CAAC,SAAD,CAAb;AACMI,gBAAAA,QAHU,GAGCd,aAAa,CAACY,OAAd,CAAsBG,YAAtB,EAHD;AAAA;AAAA,uBAIVd,IAAI,CAACe,qBAAL,EAJU;;AAAA;AAKhBT,gBAAAA,QAAQ,CAACR,YAAY,CAACe,QAAD,CAAb,CAAR;AACAN,gBAAAA,MAAM,CAACS,IAAP,CAAY,OAAZ;AANgB;AAAA;;AAAA;AAAA,qBAQbjB,aAAa,CAACY,OAAd,CAAsBM,eAAtB,EARa;AAAA;AAAA;AAAA;;AAShBR,gBAAAA,aAAa,CAAC,SAAD,CAAb;AATgB;AAAA,uBAUOV,aAAa,CAACY,OAAd,CAAsBO,mBAAtB,EAVP;;AAAA;AAUVL,gBAAAA,SAVU;AAAA;AAAA,uBAWVb,IAAI,CAACe,qBAAL,EAXU;;AAAA;AAYhBT,gBAAAA,QAAQ,CAACR,YAAY,CAACe,SAAD,CAAb,CAAR;AACAN,gBAAAA,MAAM,CAACS,IAAP,CAAY,OAAZ;;AAbgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAbN,aAAa;AAAA;AAAA;AAAA,OAAnB;;AAgBAA,IAAAA,aAAa;AACZ,GAlBO,EAkBL,EAlBK,CAAT;AAoBC,SACE,MAAC,MAAD,QACE,MAAC,IAAD,QACE,qCADF,CADF,EAIE,MAAC,IAAD,OAJF,EAME,MAAC,UAAD,OANF,EAOE,MAAC,KAAD;AAAO,IAAA,UAAU,EAAEF;AAAnB,IAPF,CADF;AAWD,CApCD;;AAsCA,eAAeX,SAAS,CAACQ,SAAD,CAAxB","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport Head from 'next/head'\nimport { useRouter } from 'next/router'\n\nimport { withRedux } from '../lib/redux'\nimport { saveAuthData } from '../actions/auth'\nimport { blockstackAPI } from '../api'\nimport { User } from 'radiks'\n\nimport Meta from '../components/meta'\nimport Layout from '../components/layout'\nimport Login from '../components/login'\nimport LandingNav from '../components/landingNav'\n\nconst LoginPage = () => {\n  const dispatch = useDispatch()\n  const router = useRouter()\n  const [loginState, setLoginState] = useState('')\n\t\n\tuseEffect(() => {\n\t\tconst checkAuthData = async () => {\n      if(blockstackAPI.session.isUserSignedIn()) {\n        setLoginState('pending')\n        const authData = blockstackAPI.session.loadUserData()\n        await User.createWithCurrentUser()\n        dispatch(saveAuthData(authData))\n        router.push('/dash')\n      }\n\t\t\telse if(blockstackAPI.session.isSignInPending()) {\n        setLoginState('pending')\n        const authData = await blockstackAPI.session.handlePendingSignIn()\n        await User.createWithCurrentUser()\n        dispatch(saveAuthData(authData))\n        router.push('/dash')\n\t\t\t}\n\t\t}\n\t\tcheckAuthData()\n  }, [])\n  \n  return (\n    <Layout>\n      <Head>\n        <title>Login | Paras</title>\n      </Head>\n      <Meta />\n\n      <LandingNav />\n      <Login loginState={loginState} />\n    </Layout>\n  )\n}\n\nexport default withRedux(LoginPage)\n"]},"metadata":{},"sourceType":"module"}