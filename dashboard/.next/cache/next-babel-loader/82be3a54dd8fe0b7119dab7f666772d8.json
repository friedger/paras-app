{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Frame from 'react-frame-component';\nimport { withRedux } from '../lib/redux';\nimport Layout from '../components/layout';\nimport Meta from '../components/meta';\nimport Nav from '../components/nav';\nimport Sidebar from '../components/sidebar';\nimport LoggedIn from '../components/loggedIn';\nimport Onboarding from '../components/onboarding';\nimport Loading from '../components/loading';\nimport { saveAuthData, saveUserId } from '../actions/auth';\nimport { saveProfileData } from '../actions/profile';\nimport { blockstackAPI, IdentifierAPI, themeAPI } from '../api';\nimport anchorme from 'anchorme';\nimport handlebars from 'handlebars';\n\nconst readFileAsBuffer = file => {\n  const temporaryFileReader = new FileReader();\n  return new _Promise((resolve, reject) => {\n    temporaryFileReader.onload = () => {\n      resolve(temporaryFileReader.result);\n    };\n\n    temporaryFileReader.readAsArrayBuffer(file);\n  });\n};\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: description,\n    1: setDescription\n  } = useState('');\n  const {\n    0: avatarUrl,\n    1: setAvatarUrl\n  } = useState('');\n  const {\n    0: avatarFile,\n    1: setAvatarFile\n  } = useState('');\n  const {\n    0: accountList,\n    1: setAccountList\n  } = useState([]);\n  const {\n    0: themeList,\n    1: setThemeList\n  } = useState([]);\n  const {\n    0: theme,\n    1: setTheme\n  } = useState('');\n  const {\n    0: identifier,\n    1: setIdentifier\n  } = useState('');\n  const {\n    0: template,\n    1: setTemplate\n  } = useState('');\n  const {\n    0: submitState,\n    1: setSubmitState\n  } = useState('');\n  const {\n    0: loadingState,\n    1: setLoadingState\n  } = useState(true);\n  const authData = useSelector(state => state.auth.authData);\n  const profile = useSelector(state => state.profile);\n  const {\n    0: showProfileSidebar,\n    1: setShowProfileSidebar\n  } = useState(false);\n  const {\n    0: showOnboarding,\n    1: setShowOnboarding\n  } = useState(true);\n\n  const logout = async () => {\n    await blockstackAPI.session.signUserOut();\n    dispatch(saveAuthData(null));\n  };\n\n  const submit = async (e, onboarding) => {\n    e.preventDefault();\n    setSubmitState('pending');\n\n    try {\n      const newProfile = {\n        name: name,\n        description: description,\n        avatarUrl: avatarUrl,\n        accountList: accountList,\n        theme: theme\n      };\n\n      if (avatarFile) {\n        const buff = await readFileAsBuffer(avatarFile);\n        const newAvatarUrl = await blockstackAPI.session.putFile('avatar.png', buff, {\n          encrypt: false\n        });\n        newProfile.avatarUrl = newAvatarUrl;\n      }\n\n      if (onboarding) {\n        const newData = {\n          identifier: identifier,\n          blockstackId: authData.username,\n          profile: newProfile\n        };\n        const newId = new IdentifierAPI(newData);\n        await newId.save();\n        dispatch(saveUserId(identifier));\n      } else {\n        const newId = await IdentifierAPI.findOne({\n          identifier: identifier\n        });\n        newId.update({\n          profile: newProfile\n        });\n        await newId.save();\n      }\n\n      dispatch(saveProfileData(newProfile));\n      setSubmitState('fulfilled');\n    } catch (err) {\n      setSubmitState('rejected');\n    }\n\n    setTimeout(() => {\n      setSubmitState('');\n    }, 1000);\n  };\n\n  useEffect(() => {\n    const checkAuthData = async () => {\n      if (blockstackAPI.session.isUserSignedIn()) {\n        if (!authData) {\n          const getAuthData = await blockstackAPI.session.loadUserData();\n          dispatch(saveAuthData(getAuthData));\n        }\n\n        const id = await IdentifierAPI.findOne({\n          identifier: identifier\n        });\n\n        if (id) {\n          setShowOnboarding(false);\n          dispatch(saveProfileData(id.attrs.profile));\n          dispatch(saveUserId(id.attrs.identifier));\n        }\n\n        setTimeout(() => {\n          setLoadingState(false);\n        }, 500);\n      } else {\n        router.replace('/login');\n      }\n    };\n\n    checkAuthData();\n\n    const fetchThemeList = async () => {\n      const response = await themeAPI.fetch();\n      setThemeList(response.data.data);\n    };\n\n    fetchThemeList();\n  }, []);\n  useEffect(() => {\n    if (profile.name) {\n      setName(profile.name);\n    }\n\n    if (profile.description) {\n      setDescription(profile.description);\n    }\n\n    if (_Array$isArray(profile.accountList)) {\n      const cloneAccountList = JSON.parse(_JSON$stringify(profile.accountList));\n      setAccountList(cloneAccountList);\n    }\n\n    if (profile.avatarUrl) {\n      setAvatarUrl(profile.avatarUrl);\n    }\n\n    if (profile.theme) {\n      const cloneTheme = JSON.parse(_JSON$stringify(profile.theme));\n      setTheme(cloneTheme);\n    }\n  }, [profile]);\n  useEffect(() => {\n    const currentData = JSON.parse(_JSON$stringify({\n      name: name,\n      description: description,\n      avatarUrl: avatarUrl,\n      accountList: accountList\n    }));\n\n    if (currentData.description) {\n      currentData.description = anchorme(currentData.description, {\n        attributes: [{\n          name: \"target\",\n          value: \"_blank\"\n        }]\n      });\n    }\n\n    if (theme) {\n      const path = 'index';\n      const page = theme.templatePage.find(page => page.path === path);\n      const compiled = handlebars.compile(page.template || '')(currentData);\n      setTemplate(compiled);\n    }\n  }, [theme, name, description, avatarUrl, accountList]);\n\n  const toggleProfileSidebar = () => {\n    setShowProfileSidebar(!showProfileSidebar);\n  };\n\n  return __jsx(Layout, null, __jsx(Head, null, __jsx(\"title\", null, \"Dashboard | Paras\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  })), __jsx(Meta, null), __jsx(LoggedIn, null), loadingState && __jsx(Loading, null), __jsx(Nav, {\n    toggleProfileSidebar: toggleProfileSidebar\n  }), showOnboarding && __jsx(Onboarding, {\n    identifier: identifier,\n    setIdentifer: setIdentifier,\n    name: name,\n    setName: setName,\n    description: description,\n    setDescription: setDescription,\n    accountList: accountList,\n    setAccountList: setAccountList,\n    avatarUrl: avatarUrl,\n    setAvatarUrl: setAvatarUrl,\n    avatarFile: avatarFile,\n    setAvatarFile: setAvatarFile,\n    theme: theme,\n    setTheme: setTheme,\n    themeList: themeList,\n    submit: submit,\n    submitState: submitState,\n    showOnboarding: showOnboarding,\n    setShowOnboarding: setShowOnboarding\n  }), __jsx(Sidebar, {\n    name: name,\n    setName: setName,\n    description: description,\n    setDescription: setDescription,\n    accountList: accountList,\n    setAccountList: setAccountList,\n    avatarUrl: avatarUrl,\n    setAvatarUrl: setAvatarUrl,\n    avatarFile: avatarFile,\n    setAvatarFile: setAvatarFile,\n    theme: theme,\n    setTheme: setTheme,\n    themeList: themeList,\n    submit: submit,\n    submitState: submitState,\n    showProfileSidebar: showProfileSidebar,\n    toggleProfileSidebar: toggleProfileSidebar,\n    logout: logout\n  }), __jsx(Frame, {\n    className: \"w-screen\",\n    style: {\n      height: `calc(100vh - 2.5rem)`\n    }\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: template\n    }\n  })));\n};\n\nexport default withRedux(Dashboard);","map":{"version":3,"sources":["/Users/riqi/Projects/persona-app/dashboard/pages/dash.js"],"names":["React","useEffect","useState","Head","useRouter","useDispatch","useSelector","Frame","withRedux","Layout","Meta","Nav","Sidebar","LoggedIn","Onboarding","Loading","saveAuthData","saveUserId","saveProfileData","blockstackAPI","IdentifierAPI","themeAPI","anchorme","handlebars","readFileAsBuffer","file","temporaryFileReader","FileReader","resolve","reject","onload","result","readAsArrayBuffer","Dashboard","dispatch","router","name","setName","description","setDescription","avatarUrl","setAvatarUrl","avatarFile","setAvatarFile","accountList","setAccountList","themeList","setThemeList","theme","setTheme","identifier","setIdentifier","template","setTemplate","submitState","setSubmitState","loadingState","setLoadingState","authData","state","auth","profile","showProfileSidebar","setShowProfileSidebar","showOnboarding","setShowOnboarding","logout","session","signUserOut","submit","e","onboarding","preventDefault","newProfile","buff","newAvatarUrl","putFile","encrypt","newData","blockstackId","username","newId","save","findOne","update","err","setTimeout","checkAuthData","isUserSignedIn","getAuthData","loadUserData","id","attrs","replace","fetchThemeList","response","fetch","data","cloneAccountList","JSON","parse","cloneTheme","currentData","attributes","value","path","page","templatePage","find","compiled","compile","toggleProfileSidebar","height","__html"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Head from 'next/head'\nimport { useRouter } from 'next/router'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Frame from 'react-frame-component'\n\nimport { withRedux } from '../lib/redux'\nimport Layout from '../components/layout'\nimport Meta from '../components/meta'\nimport Nav from '../components/nav'\nimport Sidebar from '../components/sidebar'\nimport LoggedIn from '../components/loggedIn'\nimport Onboarding from '../components/onboarding'\nimport Loading from '../components/loading'\n\nimport { saveAuthData, saveUserId } from '../actions/auth'\nimport { saveProfileData } from '../actions/profile'\nimport { blockstackAPI, IdentifierAPI, themeAPI } from '../api'\nimport anchorme from 'anchorme'\nimport handlebars from 'handlebars'\n\nconst readFileAsBuffer = (file) => {\n  const temporaryFileReader = new FileReader()\n\n  return new Promise((resolve, reject) => {\n    temporaryFileReader.onload = () => {\n      resolve(temporaryFileReader.result)\n    }\n    temporaryFileReader.readAsArrayBuffer(file)\n  })\n}\n\nconst Dashboard = () => {\n  const dispatch = useDispatch()\n  const router = useRouter()\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n  const [avatarUrl, setAvatarUrl] = useState('')\n  const [avatarFile, setAvatarFile] = useState('')\n  const [accountList, setAccountList] = useState([])\n  const [themeList, setThemeList] = useState([])\n  const [theme, setTheme] = useState('')\n  const [identifier, setIdentifier] = useState('')\n  const [template, setTemplate] = useState('')\n  const [submitState, setSubmitState] = useState('')\n  const [loadingState, setLoadingState] = useState(true)\n\n  const authData = useSelector(state => state.auth.authData)\n  const profile = useSelector(state => state.profile)\n\n  const [showProfileSidebar, setShowProfileSidebar] = useState(false)\n  const [showOnboarding, setShowOnboarding] = useState(true)\n\n  const logout = async () => {\n    await blockstackAPI.session.signUserOut()\n    dispatch(saveAuthData(null))\n  }\n\n  const submit = async (e, onboarding) => {\n    e.preventDefault()\n\n    setSubmitState('pending')\n\n    try {\n      const newProfile = {\n        name: name,\n        description: description,\n        avatarUrl: avatarUrl,\n        accountList: accountList,\n        theme: theme\n      }\n      if(avatarFile) {\n        const buff = await readFileAsBuffer(avatarFile)\n        const newAvatarUrl = await blockstackAPI.session.putFile('avatar.png', buff, {\n          encrypt: false\n        })\n        newProfile.avatarUrl = newAvatarUrl\n      }\n\n      if(onboarding) {\n        const newData = {\n          identifier: identifier,\n          blockstackId: authData.username,\n          profile: newProfile\n        }\n        const newId = new IdentifierAPI(newData)\n        await newId.save()\n        dispatch(saveUserId(identifier))\n      }\n      else {\n        const newId = await IdentifierAPI.findOne({\n          identifier: identifier\n        })\n        newId.update({\n          profile: newProfile\n        })\n        await newId.save()\n      }\n  \n      dispatch(saveProfileData(newProfile))\n      setSubmitState('fulfilled')\n    } catch (err) {\n      setSubmitState('rejected')\n    }\n    setTimeout(() => {\n      setSubmitState('')\n    }, 1000)\n  }\n\n  useEffect(() => {\n\t\tconst checkAuthData = async () => {\n      if(blockstackAPI.session.isUserSignedIn()) {\n        if(!authData) {\n          const getAuthData = await blockstackAPI.session.loadUserData()\n          dispatch(saveAuthData(getAuthData))\n        }\n\n        const id = await IdentifierAPI.findOne({\n          identifier: identifier\n        })\n    \n        if(id) {\n          setShowOnboarding(false)\n          dispatch(saveProfileData(id.attrs.profile))\n          dispatch(saveUserId(id.attrs.identifier))\n        }\n        setTimeout(() => {\n          setLoadingState(false)\n        }, 500)\n      }\n      else {\n        router.replace('/login')\n      }\n\t\t}\n    checkAuthData()\n    \n    const fetchThemeList = async () => {\n      const response = await themeAPI.fetch()\n      setThemeList(response.data.data)\n    }\n    fetchThemeList()\n  }, [])\n\n  useEffect(() => {\n    if(profile.name) {\n      setName(profile.name)\n    }\n    if(profile.description) {\n      setDescription(profile.description)\n    }\n    if(Array.isArray(profile.accountList)) {\n      const cloneAccountList = JSON.parse(JSON.stringify(profile.accountList))\n      setAccountList(cloneAccountList)\n    }\n    if(profile.avatarUrl) {\n      setAvatarUrl(profile.avatarUrl)\n    }\n    if(profile.theme) {\n      const cloneTheme = JSON.parse(JSON.stringify(profile.theme))\n      setTheme(cloneTheme)\n    }\n  }, [profile])\n\n  useEffect(() => {\n    const currentData = JSON.parse(JSON.stringify({\n      name: name,\n      description: description,\n      avatarUrl: avatarUrl,\n      accountList: accountList\n    }))\n    if(currentData.description) {\n      currentData.description = anchorme(currentData.description, {\n        attributes: [\n          {\n            name:\"target\",\n            value:\"_blank\"\n          }\n        ]\n      })\n    }\n  \n    if(theme) {\n      const path = 'index'\n      const page = theme.templatePage.find(page => page.path === path)\n      const compiled = handlebars.compile(page.template || '')(currentData)\n      setTemplate(compiled)\n    }\n  }, [theme, name, description, avatarUrl, accountList])\n\n  const toggleProfileSidebar = () => {\n    setShowProfileSidebar(!showProfileSidebar)\n  }\n\n  return (\n    <Layout>\n      <Head>\n        <title>Dashboard | Paras</title>\n        <link rel='icon' href='/favicon.ico' />\n      </Head>\n\n      <Meta />\n      <LoggedIn />\n      {\n        loadingState && (\n          <Loading />\n        )\n      }\n\n      <Nav toggleProfileSidebar={toggleProfileSidebar} />\n\n      {\n        showOnboarding && (\n          <Onboarding\n            identifier={identifier}\n            setIdentifer={setIdentifier}\n            name={name}\n            setName={setName} \n            description={description}\n            setDescription={setDescription} \n            accountList={accountList}\n            setAccountList={setAccountList}\n            avatarUrl={avatarUrl}\n            setAvatarUrl={setAvatarUrl}\n            avatarFile={avatarFile}\n            setAvatarFile={setAvatarFile}  \n            theme={theme}\n            setTheme={setTheme}\n            themeList={themeList}\n            submit={submit}\n            submitState={submitState}\n            showOnboarding={showOnboarding}\n            setShowOnboarding={setShowOnboarding}\n          />\n        )\n      }\n\n      <Sidebar \n        name={name}\n        setName={setName} \n        description={description}\n        setDescription={setDescription} \n        accountList={accountList}\n        setAccountList={setAccountList}\n        avatarUrl={avatarUrl}\n        setAvatarUrl={setAvatarUrl}\n        avatarFile={avatarFile}\n        setAvatarFile={setAvatarFile}  \n        theme={theme}\n        setTheme={setTheme}\n        themeList={themeList}\n        submit={submit}\n        submitState={submitState}\n        showProfileSidebar={showProfileSidebar}\n        toggleProfileSidebar={toggleProfileSidebar}\n        logout={logout}\n      />\n\n      <Frame className=\"w-screen\" style={{\n        height: `calc(100vh - 2.5rem)`\n      }}>\n        <div dangerouslySetInnerHTML={{\n          __html: template\n        }}></div>\n      </Frame>\n    </Layout>\n  )\n}\n\nexport default withRedux(Dashboard)"]},"metadata":{},"sourceType":"module"}